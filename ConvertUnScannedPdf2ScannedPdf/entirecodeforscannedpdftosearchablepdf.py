# -*- coding: utf-8 -*-
"""EntireCodeforScannedPdfToSearchablePdf.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eVLOywv8APAgz4pEKFQWlNv7ivh6nhpR

**Installing the required dependency**
"""

! apt install tesseract-ocr
! apt install libtesseract-dev

!pip install pytesseract

!apt install ghostscript

!pip install ocrmypdf

"""# Restart the cell. Inorder for the other dependecy to work"""

!ocrmypdf --help

from ctypes.util import find_library
find_library("gs")

!pip install fitz

!pip install PyMuPDF==1.16.14

!pip install pdfminer

"""## OcrMyPDF lib will perform the convertion"""

import ocrmypdf
def ocr(file_path,save_path):
  ocrmypdf.ocr(file_path, save_path, rotate_pages=True,
    remove_background=True, deskew=True, force_ocr=True)

from pdfminer.pdfpage import PDFPage
def get_pdf_searchable_pages(fname):
  
  searchable_pages = []
  non_searchable_pages = []
  page_num = 0

  with open(fname, 'rb') as infile:
      for page in PDFPage.get_pages(infile):
          page_num += 1
          if 'Font' in page.resources.keys():
              searchable_pages.append(page_num)
          else:
              non_searchable_pages.append(page_num)

  print("The number of pages are: ",page_num)
  print("The Searchable page are: ",searchable_pages)
  print("The Non searchable page are: ",non_searchable_pages)

  # Check if the pdf is not empty
  if page_num > 0:

    # check if the document is non searchable
      if len(searchable_pages) == 0:
          print(f"Document '{fname}' has {page_num} page(s). "
                f"Complete document is non-searchable")
          # convert it to searchable
          ocr(fname,"op.pdf")

      elif len(non_searchable_pages) > 0:
          print(f"Document '{fname}' has {page_num} page(s). "
                f"Document's page number '{non_searchable_pages}' is non-searchable")
          # convert it to searchable
          ocr(fname,"op.pdf")

      # check if the document is searchable
      elif len(non_searchable_pages) == 0:
          print(f"Document '{fname}' has {page_num} page(s). "
                f"Complete document is searchable")
      else:
          print(f"searchable_pages : {searchable_pages}")
          print(f"non_searchable_pages : {non_searchable_pages}")
  else:
      print(f"Not a valid document")

if __name__ == '__main__':
    get_pdf_searchable_pages("demo.pdf")